version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1
  orb-tools: circleci/orb-tools@9.0
  aws-code-deploy: circleci/aws-code-deploy@1.0.1

jobs:
  build:
    working_directory: ~/java-app
    docker:
      - image: circleci/openjdk:stretch
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: mvn -Dmaven.test.skip=true package

      - persist_to_workspace:
         root: ./java-app
         paths:
           - target/

  deploy:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - attach_workspace:
          at: ./java-app
      
      - aws-code-deploy/push-bundle:
          application-name: sampleapp
          bundle-source: ~/java-app
          bundle-bucket: sampleappraj
          bundle-key: sample/$CIRCLE_PROJECT_REPONAME-${CIRCLE_BRANCH}-$CIRCLE_TAG-<< pipeline.git.revision	>>-<< pipeline.git.tag	>>  
      - aws-code-deploy/deploy-bundle:
          application-name: sampleapp
          deployment-group: sampleapp-group
          bundle-bucket: sampleappraj
          bundle-key: sample/$CIRCLE_PROJECT_REPONAME-${CIRCLE_BRANCH}-$CIRCLE_TAG-<< pipeline.git.revision	>>-<< pipeline.git.tag	>>           

  test:
    docker:
      - image: circleci/openjdk:stretch
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - attach_workspace:
          at: ./target
      - run: mvn test
workflows:
   version: 2
   build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
             

